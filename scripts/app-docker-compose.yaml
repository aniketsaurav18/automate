version: "3.9"

services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    image: automate-backend:latest
    env_file:
      - ../backend/.env
    expose:
      - "4000"
    depends_on:
      - kafka1
      - zoo1
    restart: unless-stopped
    networks:
      - automate-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          memory: 512M

  ts-executor:
    build:
      context: ../
      dockerfile: Dockerfile
    image: automate-ts-executor:latest
    env_file:
      - ../workers/ts-executor/.env
    depends_on:
      - backend
      - kafka1
    networks:
      - automate-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'node|ts-executor' || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          memory: 256M

  schedular:
    build:
      context: ../workers/schedular
      dockerfile: Dockerfile
    image: automate-schedular:latest
    env_file:
      - ../workers/schedular/.env
    depends_on:
      - backend
      - kafka1
    networks:
      - automate-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'node|schedular' || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 1
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          memory: 256M

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - automate-net
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
        reservations:
          memory: 512M

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    ports:
      - "19092:19092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOSTAGE_IP:-kafka1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_CREATE_TOPICS: "create-execution:3:1,execution:3:1"
    depends_on:
      - zoo1
    networks:
      - automate-net
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics",
          "--list",
          "--bootstrap-server",
          "localhost:9092",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2G
        reservations:
          memory: 1G

  nginx:
    build:
      context: .
      dockerfile: nginx-dockerfile
    image: automate-nginx:latest
    ports:
      - "8000:80"
    depends_on:
      - backend
    networks:
      - automate-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
        reservations:
          memory: 128M
networks:
  automate-net:
    driver: bridge
    name: automate-net
